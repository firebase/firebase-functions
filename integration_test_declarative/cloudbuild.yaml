# Cloud Build configuration for Firebase Functions Integration Tests
# Runs all enabled test suites sequentially to avoid rate limits

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '3600s'

substitutions:
  _PROJECT_ID: 'functions-integration-tests'
  _REGION: 'us-central1'

steps:
  # Build SDK and run all enabled test suites sequentially
  - name: 'node:18'
    id: 'build-sdk-and-test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Step 1: Build and pack the firebase-functions SDK from source
        echo "Building firebase-functions SDK from source..."
        npm ci
        npm run build
        npm pack
        # Move the tarball to where integration tests expect it
        mv firebase-functions-*.tgz integration_test_declarative/firebase-functions-local.tgz
        echo "SDK built and packed successfully"

        # Step 2: Run integration tests with the local SDK
        cd integration_test_declarative
        echo "Installing test dependencies..."
        npm ci
        # Install firebase-tools globally
        npm install -g firebase-tools
        # Verify firebase is installed
        firebase --version
        # Use Application Default Credentials (Cloud Build service account)
        # Don't set PROJECT_ID or REGION - let each suite use values defined in its YAML config
        # Some suites use functions-integration-tests, others use functions-integration-tests-v2
        # All suites currently use us-central1, but this keeps YAML as single source of truth
        # Run all enabled tests sequentially (reads from YAML configs)
        # This will run all suites defined in config/v1/suites.yaml and config/v2/suites.yaml
        # Commented out suites in YAML will be automatically skipped
        # The tests will automatically use the firebase-functions-local.tgz we just created
        npm run test:all:sequential

# Artifacts to store
artifacts:
  objects:
    location: 'gs://${PROJECT_ID}-test-results/${BUILD_ID}'
    paths:
      - 'logs/**/*.log'