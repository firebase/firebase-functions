import * as admin from "firebase-admin";
import * as functions from "firebase-functions/v1";
import { sanitizeData } from "../utils";

const REGION = "{{region}}";

{{#each functions}}
export const {{name}}{{../testRunId}} = functions
  .runWith({
    timeoutSeconds: {{timeout}}
  })
  .region(REGION)
  .storage.bucket("functions-integration-tests.firebasestorage.app")
  .object()
  .{{trigger}}(async (object{{#if (eq trigger "onFinalize")}}: unknown{{/if}}, context) => {
    {{#if (eq trigger "onFinalize")}}
    if (!object || typeof object !== "object" || !("name" in object)) {
      console.error("Invalid object structure for storage object finalize");
      return;
    }
    const name = (object as { name: string }).name;
    if (!name || typeof name !== "string") {
      console.error("Invalid name property for storage object finalize");
      return;
    }
    const testId = name.split(".")[0];
    {{else}}
    const testId = object.name?.split(".")[0];
    if (!testId) {
      console.error("TestId not found for storage object {{trigger}}");
      return;
    }
    {{/if}}

    await admin
      .firestore()
      .collection("{{collection}}")
      .doc(testId)
      .set(sanitizeData(context));
  });

{{/each}}