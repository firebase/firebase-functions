import * as admin from "firebase-admin";
import * as functions from "firebase-functions/v1";
import { sanitizeData } from "../utils";

const REGION = "{{region}}";

{{#each functions}}
export const {{name}}_{{../testRunId}} = functions
  .runWith({
    timeoutSeconds: {{timeout}}
  })
  .region(REGION)
  .database.ref("{{path}}")
  .{{trigger}}(async ({{#if (eq trigger "onUpdate")}}change{{else if (eq trigger "onWrite")}}change{{else}}snapshot{{/if}}, context) => {
    const testId = context.params.testId;
    {{#if (eq trigger "onWrite")}}
    if (change.after.val() === null) {
      functions.logger.info(`Event for ${testId} is null; presuming data cleanup, so skipping.`);
      return;
    }
    {{/if}}

    await admin
      .firestore()
      .collection("{{collection}}")
      .doc(testId)
      .set(
        sanitizeData({
          ...context,
          {{#if (or (eq trigger "onUpdate") (eq trigger "onWrite"))}}
          url: change.after.ref.toString(),
          {{#if (eq trigger "onUpdate")}}
          data: change.after.val() ? JSON.stringify(change.after.val()) : null,
          {{/if}}
          {{else}}
          url: snapshot.ref.toString(),
          {{/if}}
        })
      );
  });

{{/each}}